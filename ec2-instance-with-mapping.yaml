AWSTemplateFormatVersion: 2010-09-09
Description: This is my first Cloud Formation deployment
Mappings:
  RegionWiseImageIds:
    us-east-1:
      Ubuntu22: ami-09d56f8956ab235b3
      Ubuntu20: ami-0c4f7023847b90238
      amazonLinux: ami-0022f774911c1d690
    us-west-1:
      Ubuntu22: ami-0dc5e9ff792ec08e3
      Ubuntu20: ami-0487b1fe60c1fd1a2
Parameters:
  InstanceType:
    Type: String
    Description: This is a paramete for Instance Type
  EnvironmentType:
    Type: String
    Description: This defines the environment type
    AllowedValues: [test, prod]
Conditions:
  CreateProResources: !Equals
    - !Ref EnvironmentType
    - prod
  CreateTestResources: !Equals
    - !Ref EnvironmentType
    - test

Resources:
  myS3Bucket:
    Type: AWS::S3::Bucket
    DeletionPolicy: Retain
  WebserverEc2Instance:
    Type: AWS::EC2::Instance
    DependsOn: myS3Bucket
    Properties:
      ImageId: !FindInMap 
        - RegionWiseImageIds
        - !Ref AWS::Region
        - amazonLinux
      InstanceType: !Ref InstanceType
      SecurityGroupIds:
        - Ref: SecurityGroup
      Tags:
        - 
          Key: Name
          Value: WebserverEc2Instance
        - 
          Key: Project
          Value: My first Ec2 instance from Cloud Formation
      UserData: 
        Fn::Base64: !Sub |
          #!/bin/bash
          sudo su
          yum update -y
          yum install -y httpd 
          systemctl start httpd
          systemctl enable httpd

  NewVolume:
    Type: AWS::EC2::Volume
    Condition: CreateProResources
    Properties:
      Size: 100
      AvailabilityZone: !GetAtt WebserverEc2Instance.AvailabilityZone
      Tags:
        - Key: MyTag
          Value: TagValue
  MountPoint:
    Type: AWS::EC2::VolumeAttachment
    Condition: CreateProResources
    Properties:
      InstanceId: !Ref WebserverEc2Instance
      VolumeId: !Ref NewVolume
      Device: /dev/sdh
  SecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      GroupDescription: Allow http to client host
      SecurityGroupIngress:
        - IpProtocol: tcp
          FromPort: 80
          ToPort: 80
          CidrIp: 0.0.0.0/0
Outputs:
  Ec2InstancePublicIpAddress:
    Value: !GetAtt WebserverEc2Instance.PublicIp
    Description: This gives the public ip address
  Ec2InstancePrivateIpAddress:
    Value: !GetAtt WebserverEc2Instance.PrivateIp
  Ec2InstancePublicDNS:
    Value: !GetAtt WebserverEc2Instance.PublicDnsName